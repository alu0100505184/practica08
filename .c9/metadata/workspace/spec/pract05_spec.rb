{"changed":true,"filter":false,"title":"pract05_spec.rb","tooltip":"/spec/pract05_spec.rb","value":"require 'pract05'\nmodule Pract05 \n  describe \"Pregunta\" do\n    before :each do\n      @p1=PreguntaSimple.new(\"Seleccione cuanto vale. 2 + 4\",6,[7,2,3])\n      puts @p1.enunciado.class\n    end\n\n    context \"PreguntaSimples\" do\n      describe \"PreguntaSimple1\" do\n\tit \"tenemos una pregunta\" do\n\t  @p1.enunciado.should == \"Seleccione cuanto vale. 2 + 4\"\n\t  expect(@p1.correcta).to eq(6)\n\t  @p1.distraccion.should == [7,2,3]\n\t  #@p1.enunciado.should eq(\"2+2\")\n\tend\n\tit \"Deben existir tres componentes\" do\n\t  expect{Pract05::PreguntaSimple.new(:enunciado =>'5*8 = ?')}.to raise_error(ArgumentError)\n\tend\n\tit \"Deben imprimirse la pregunta\" do\n\t  @p1.imprimir_pregunta\n\tend\n\tit \"Deben imprimirse la pregunta\" do\n\t  @p1.to_s.should == \"Seleccione cuanto vale. 2 + 4\\n6\\n7\\n2\\n3\\n\"\n\tend\n      end  \n    end\n  end\n  \n  describe \"Preguntas de examen\" do\n    context \"Test de preguntas de examen\" do\n      before :each do\n\t@p1 = Pract05::PreguntaSimple.new(\"¿Cuál es la salida del siguiente código de Ruby? \\nclass Xyz\\n  def pots\\n    @nice\\n  end\\nend\\n\\nxyz = Xyz.new\\np xyz.pots\\n\",\"nil\",[\"#<Xyz:0xa000208\",\"0\",\"Ninguna de las anteriores\"]) \n\t@p2 = Pract05::PreguntaSimple.new(\"La siguiente definición de un hash en Ruby es válida: \\nhash_raro = {\\n  [1, 2, 3] => Object.new(),\\n  hash.new => :toto\\n}\", \"Cierto\", [\"Falso\"]);\n\t@p3 = Pract05::PreguntaSimple.new('Cuál es la salida del siguiente código Ruby?\\nclass Array\\n  def say_hi\\n    \"HEY!\"\\n  end\\nend\\n\\np [1, \"bob\"].say_hi', \"HEY!\", [\"1\", \"bob\", \"Ninguna de las anteriores\"]);\n\t@p4 = Pract05::PreguntaSimple.new(\"¿Cuál es el tipo del objeto en el siguiente código en Ruby?\\nclass Objeto\\nend\", \"Ninguna de las anteriores\", [\"Una instancia de la clase\", \"Una constante\", \"Un objeto\"]);\n\t@p5 = Pract05::PreguntaSimple.new(\"Es apropiado que una clase Tablero herede de una clase Juego\", \"Cierto\", [\"Falso\"]);\n      @lista = ListaEnlazada.new([@p1,@p2,@p3,@p4,@p5])\n      end\n      \n      #Primera pregunta\n      describe \"#Mostrar Pregunta 1\" do\n\tit \"Se muestra la pregunta correctamente\" do\n\t  puts (\"\\nPREGUNTA 1º\")\n\t  @p1.imprimir_pregunta()\n\tend\n      end\n      \n      describe \"#Mostrar Pregunta 1\" do\n\tit \"Se muestra el enunciado correctamente\" do\n\t  @p1.imprimir_enunciado()\n\tend\n      end\n      \n      describe \"#Mostrar Respuestas 1\" do\n\tit \"Se muestran todas las respuestas correctamente\" do\n\t  @p1.imprimir_respuestas()\n\tend\n      end\n      \n      describe \"#Mostrar Respuestas 1\" do\n\tit \"Se muestran únicamente las respuestas correctas\" do\n\t  @p1.imprimir_respuestas_correctas()\n\tend\n      end\n      \n      #Segunda Pregunta\n      describe \"#Mostrar Pregunta 2\" do\n\tit \"Se muestra la pregunta correctamente\" do\n\t  puts (\"\\nPREGUNTA 2º\")\n\t  @p2.imprimir_pregunta()\n\tend\n      end\n      \n      describe \"#Mostrar Pregunta 2\" do\n\tit \"Se muestra el enunciado correctamente\" do\n\t  @p2.imprimir_enunciado()\n\tend\n      end\n      \n      describe \"#Mostrar Respuestas 2\" do\n\tit \"Se muestran todas las respuestas correctamente\" do\n\t  @p2.imprimir_respuestas()\n\tend\n      end\n      \n      describe \"#Mostrar Respuestas 2\" do\n\tit \"Se muestran únicamente las respuestas correctas\" do\n\t  @p2.imprimir_respuestas_correctas()\n\tend\n      end\n      \n      #Tercera Pregunta\n      describe \"#Mostrar Pregunta 3\" do\n\tit \"Se muestra la pregunta correctamente\" do\n\t  puts (\"\\nPREGUNTA 3º\")\n\t  @p3.imprimir_pregunta()\n\tend\n      end\n      \n      describe \"#Mostrar Pregunta 3\" do\n\tit \"Se muestra el enunciado correctamente\" do\n\t  @p3.imprimir_enunciado()\n\tend\n      end\n      \n      describe \"#Mostrar Respuestas 3\" do\n\tit \"Se muestran todas las respuestas correctamente\" do\n\t  @p3.imprimir_respuestas()\n\tend\n      end\n      \n      describe \"#Mostrar Respuestas 3\" do\n\tit \"Se muestran únicamente las respuestas correctas\" do\n\t  @p3.imprimir_respuestas_correctas()\n\tend\n      end\n      \n      #Cuarta Pregunta\n      describe \"#Mostrar Pregunta 4\" do\n\tit \"Se muestra la pregunta correctamente\" do\n\t  puts (\"\\nPREGUNTA 4º\")\n\t  @p4.imprimir_pregunta()\n\tend\n      end\n      \n      describe \"#Mostrar Pregunta 4\" do\n\tit \"Se muestra el enunciado correctamente\" do\n\t  @p4.imprimir_enunciado()\n\tend\n      end\n      \n      describe \"#Mostrar Respuestas 4\" do\n\tit \"Se muestran todas las respuestas correctamente\" do\n\t  @p4.imprimir_respuestas()\n\tend\n      end\n      \n      describe \"#Mostrar Respuestas 4\" do\n\tit \"Se muestran únicamente las respuestas correctas\" do\n\t  @p4.imprimir_respuestas_correctas()\n\tend\n      end\n      \n      #Quinta Pregunta\n      describe \"#Mostrar Pregunta 5\" do\n\tit \"Se muestra la pregunta correctamente\" do\n\t  puts (\"\\nPREGUNTA 5º\")\n\t  @p5.imprimir_pregunta()\n\tend\n      end\n      \n      describe \"#Mostrar Pregunta 5\" do\n\tit \"Se muestra el enunciado correctamente\" do\n\t  @p5.imprimir_enunciado()\n\tend\n      end\n      \n      describe \"#Mostrar Respuestas 5\" do\n\tit \"Se muestran todas las respuestas correctamente\" do\n\t  @p5.imprimir_respuestas()\n\tend\n      end\n      \n      describe \"#Mostrar Respuestas 5\" do\n\tit \"Se muestran únicamente las respuestas correctas\" do\n\t  @p5.imprimir_respuestas_correctas()\n\tend\n      end\n      \n      it 'Comprobando que la clase pregunta simple ha heredado de PreguntaGlobal' do\n\t   PreguntaSimple.ancestors.include?(PreguntaGlobal) == true\n      end\n      it 'Comprobando que la clase pregunta simple no es una PreguntaGlobal' do\n\t   PreguntaSimple.is_a?(PreguntaGlobal) == false\n      end\n    end\n  end\n\nend","undoManager":{"mark":22,"position":22,"stack":[[{"group":"doc","deltas":[{"start":{"row":12,"column":3},"end":{"row":12,"column":4},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":4},"end":{"row":12,"column":5},"action":"insert","lines":["x"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":5},"end":{"row":12,"column":6},"action":"insert","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":6},"end":{"row":12,"column":7},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":7},"end":{"row":12,"column":8},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":8},"end":{"row":12,"column":9},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":9},"end":{"row":12,"column":10},"action":"insert","lines":["("]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":22},"end":{"row":12,"column":23},"action":"insert","lines":[")"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":24},"end":{"row":12,"column":25},"action":"remove","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":24},"end":{"row":12,"column":25},"action":"remove","lines":["h"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":24},"end":{"row":12,"column":25},"action":"remove","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":24},"end":{"row":12,"column":25},"action":"remove","lines":["u"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":24},"end":{"row":12,"column":25},"action":"remove","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":24},"end":{"row":12,"column":25},"action":"remove","lines":["d"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":24},"end":{"row":12,"column":25},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":24},"end":{"row":12,"column":25},"action":"remove","lines":["="]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":24},"end":{"row":12,"column":25},"action":"remove","lines":["="]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":24},"end":{"row":12,"column":25},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":25},"end":{"row":12,"column":26},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":27},"end":{"row":12,"column":28},"action":"insert","lines":["("]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":29},"end":{"row":12,"column":30},"action":"insert","lines":[")"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":27},"end":{"row":12,"column":28},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":28},"end":{"row":12,"column":29},"action":"insert","lines":["q"]}]}]]},"ace":{"folds":[],"scrolltop":120,"scrollleft":0,"selection":{"start":{"row":12,"column":32},"end":{"row":12,"column":32},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1416959456385}